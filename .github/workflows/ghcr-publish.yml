name: ghcr publish

on:
  schedule:
    # Run every Sunday 22:31 UTC
    - cron: '31 22 * * 0'
  push:
    branches: [ main ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  VERSION: latest

jobs:
  build-base:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image base
        uses: docker/build-push-action@v2
        with:
          context: base
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.actor }}/base:${{ env.VERSION }}

  build-isolinux:

    runs-on: ubuntu-latest
    needs: [build-base]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image isolinux
        uses: docker/build-push-action@v2
        with:
          context: isolinux
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.actor }}/isolinux:${{ env.VERSION }}

  build-devel:

    runs-on: ubuntu-latest
    needs: [build-base]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image devel
        uses: docker/build-push-action@v2
        with:
          context: devel
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.actor }}/devel:${{ env.VERSION }}

      - name: Build and push Docker image ghidra
        uses: docker/build-push-action@v2
        with:
          context: ghidra
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.actor }}/ghidra:${{ env.VERSION }}

  build-gtk3:

    runs-on: ubuntu-latest
    needs: [build-base]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image gtk3
        uses: docker/build-push-action@v2
        with:
          context: gtk3
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.actor }}/gtk3:${{ env.VERSION }}

  build-browser-chrome:

    runs-on: ubuntu-latest
    needs: [build-gtk3]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image chrome
        uses: docker/build-push-action@v2
        with:
          context: chrome
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.actor }}/chrome:${{ env.VERSION }}

  build-browser-edge:

    runs-on: ubuntu-latest
    needs: [build-gtk3]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image edge
        uses: docker/build-push-action@v2
        with:
          context: edge
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.actor }}/edge:${{ env.VERSION }}

  build-browser-firefox:

    runs-on: ubuntu-latest
    needs: [build-gtk3]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image firefox
        uses: docker/build-push-action@v2
        with:
          context: firefox
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.actor }}/firefox:${{ env.VERSION }}
